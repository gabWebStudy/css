/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    position: relative;
    height: 95vh;
    background-image:
        linear-gradient(
            to right bottom,
            rgba(126, 213, 111, 0.8),
            rgba(40, 180, 133, 0.8)), 
         url(
             ../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px; 
}

.text-box {
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* como o botao tem display inline-block, eh tratado como um texto */
    /* entao, para alinhar o botao ao centro, basta vir no pai do elemento e definir text-align: center */
    text-align: center;
}

.logo {
    height: 35px;
}

/* posso reaproveitar animacoes definidas com keyframe */
/* .logo:hover {
    animation-name: moveInLeft;
} */

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    /* corrigindo imperfeicao na animacao */
    /* sempre no elemento pai de quem eh animado */
    backface-visibility: hidden;
    /* adiciona respiro entre o botao e o titulo */
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    /* aplicando a animacao */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

/* definindo a animacao */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

/* pseudo-classes */
/* pseudoclasses sao estados de um determinado elemento (quando o usuario passa o mouse sobre um elemento, quando o mouse est√° clicado, se vc quer selecionar o ultimo filho, etc) */
/* we use pseudo-classes to style elements into determined conditions */
/* kinds - :link, :visited, ... */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    /* como o link eh uma ancora, ele tem display inline */
    /* we need to make it have a inline-block display */
    /* work as an inline element but we are able to change it's dimensions as if it was a block */
    display: inline-block;
    border-radius: 100px;
    /* existem duas formas de lidar com animacoes: transition e keyframe */
    transition: all .2s;
    /* o transition tem que ser aplicado no elemento natural, nao na pseudoclasse */
}

/* cuidando das animacoes do botao*/
.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}